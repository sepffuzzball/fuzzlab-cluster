---
apiVersion: v1
kind: Service
metadata:
  name: power
  namespace: default
spec:
  type: ExternalName
  externalName: 10.0.5.200
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # annotation to use cert-manager to request a Let's Encrypt certificate
    #cert-manager.io/cluster-issuer: letsencrypt-production
    # Set this when the backend is listening on HTTPS
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # Set this when the backend listens on a different URL
    nginx.ingress.kubernetes.io/upstream-vhost: 10.0.5.200
    # Will this actually add the DNS record?
    external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_FBE}"
  name: proxy-powerwall
  namespace: default
spec:
  ingressClassName: fbe
  rules:
    - host: &host power.${SECRET_DOMAIN_FBE}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: power
                port:
                  number: 443
  tls:
    - hosts:
        - *host
---
apiVersion: v1
kind: Service
metadata:
  name: cloud
  namespace: default
spec:
  type: ExternalName
  externalName: 10.0.2.107
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # annotation to use cert-manager to request a Let's Encrypt certificate
    #cert-manager.io/cluster-issuer: letsencrypt-production
    # Set this when the backend is listening on HTTPS
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # Set this when the backend listens on a different URL
    nginx.ingress.kubernetes.io/upstream-vhost: 10.0.2.107
    # Will this actually add the DNS record?
    external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_FBE}"
  name: proxy-cloud
  namespace: default
spec:
  ingressClassName: fbe
  rules:
    - host: &host cloud.${SECRET_DOMAIN_FBE}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: cloud
                port:
                  number: 9200
  tls:
    - hosts:
        - *host
---
apiVersion: v1
kind: Service
metadata:
  name: deluge
  namespace: default
spec:
  type: ExternalName
  externalName: ${DELUGE_ADDR}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # annotation to use cert-manager to request a Let's Encrypt certificate
    #cert-manager.io/cluster-issuer: letsencrypt-production
    # Set this when the backend is listening on HTTPS
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # Set this when the backend listens on a different URL
    nginx.ingress.kubernetes.io/upstream-vhost: ${DELUGE_ADDR}
    # Will this actually add the DNS record?
    external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_FBE}"
  name: proxy-deluge
  namespace: default
spec:
  ingressClassName: fbe
  rules:
    - host: &host deluge.${SECRET_DOMAIN_FBE}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: deluge
                port:
                  number: 443
  tls:
    - hosts:
        - *host
---
apiVersion: v1
kind: Service
metadata:
  name: home
  namespace: default
spec:
  type: ExternalName
  externalName: ${HOME_ADDR}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # annotation to use cert-manager to request a Let's Encrypt certificate
    #cert-manager.io/cluster-issuer: letsencrypt-production
    # Set this when the backend is listening on HTTPS
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # Set this when the backend listens on a different URL
    nginx.ingress.kubernetes.io/upstream-vhost: ${HOME_ADDR}
    # Will this actually add the DNS record?
    external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_FBE}"
  name: proxy-home
  namespace: default
spec:
  ingressClassName: fbe
  rules:
    - host: &host home.${SECRET_DOMAIN_FBE}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: home
                port:
                  number: 80
  tls:
    - hosts:
        - *host
---
apiVersion: v1
kind: Service
metadata:
  name: pve
  namespace: default
spec:
  type: ExternalName
  externalName: ${PVE_ADDR}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # annotation to use cert-manager to request a Let's Encrypt certificate
    #cert-manager.io/cluster-issuer: letsencrypt-production
    # Set this when the backend is listening on HTTPS
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # Set this when the backend listens on a different URL
    nginx.ingress.kubernetes.io/upstream-vhost: ${PVE_ADDR}
    # Will this actually add the DNS record?
    external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_FBE}"
  name: proxy-pve
  namespace: default
spec:
  ingressClassName: fbe
  rules:
    - host: &host pve.${SECRET_DOMAIN_FBE}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: pve
                port:
                  number: 8006
  tls:
    - hosts:
        - *host
